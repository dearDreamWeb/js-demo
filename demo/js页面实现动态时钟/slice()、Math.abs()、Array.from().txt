******************         Array.from()               ********************
Array.from() 方法从一个类似数组或可迭代对象中创建一个新的数组实例。

Array.from() 可以通过以下方式来创建数组对象：

伪数组对象（拥有一个 length 属性和若干索引属性的任意对象）
可迭代对象（可以获取对象中的元素,如 Map和 Set 等）

语法
	Array.from(arrayLike, mapFn, thisArg)
参数
	arrayLike ：想要转换成数组的伪数组对象或可迭代对象。
	mapFn (可选参数) ：如果指定了该参数，新数组中的每个元素会执行该回调函数。
	thisArg (可选参数) ：可选参数，执行回调函数 mapFn 时 this 对象。
返回值
	一个新的数组实例

/***     例子        ***********/
	const bar = ["a", "b", "c"];
	Array.from(bar);
	// ["a", "b", "c"]
 
	Array.from('foo');
	// ["f", "o", "o"]

*****************          Math.abs()              ******************************
  Math.abs()  	取绝对值
	eg：var a = -2；
	    Math.abs(a);
	    //  2


**********************    slice()                   ****************************

	语法
	$(selector).slice(start,stop)
		参数	描述

	start	必需。规定开始选取元素的位置。索引号从 0 开始。

	注意：如果是负数，则指示从被选元素的末端开始选取元素，而不是从头开始。

	stop	可选。规定结束选取元素的位置。如果省略，则选取范围会在集合末端结束。索引号从 0 开始。

	注意：如果是负数，则指示从被选元素的末端开始选取元素，而不是从头开始。
	
	start:开始位置
	stop：结束位置

	eg:var a= "123456";
	   var b = a.slice(2);
	   console.log(b);
	//  3456
	   var a= "123456";
	   var b = a.slice(-2);
	   console.log(b);
	//56





										











